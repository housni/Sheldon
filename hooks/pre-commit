#!/usr/bin/env bash

#####
# Git pre-commit hook to run linters/unit tests, etc., on "git commit...".
#####

# Exit if any command exits with a non-zero exit status.
set -e

# Exit if script uses undefined variables.
set -u

# Prevent masking an error in a pipeline.
#
# Look at the end of the 'Use set -e' section for an excellent explanation.
# See: https://www.davidpashley.com/articles/writing-robust-shell-scripts/
set -o pipefail

# See: https://codeinthehole.com/tips/tips-for-using-a-git-pre-commit-hook/

BASEDIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)

echo
echo "-----------------------------"
echo "| Sheldon pre-commit checks |"
echo "-----------------------------"
echo

declare STASH_NAME
declare STASHES
STASH_NAME="pre-commit-$(date +%s)"

# Stash files.
echo "Saving git stash with name '$STASH_NAME'"
git stash save -q --keep-index "$STASH_NAME"

# Pop git stash on exit.
trap "echo 'Popping git stash'; git stash pop -q" EXIT

# Run our checks...
echo "Running linters..."
make check.lint
echo "Running unit tests..."
make check.test.unit

echo "OK: Lints and unit tests complete."
exit 0